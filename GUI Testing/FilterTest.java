// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class FilterTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void testMultipleFilters() {
    // Test name: TestMultipleFilters
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://www.costco.com/");
    // 2 | setWindowSize | 1735x750 | 
    driver.manage().window().setSize(new Dimension(1735, 750));
    // 3 | click | id=search-field | 
    driver.findElement(By.id("search-field")).click();
    // 4 | type | id=search-field | blender
    driver.findElement(By.id("search-field")).sendKeys("blender");
    // 5 | click | css=.btn:nth-child(4) | 
    driver.findElement(By.cssSelector(".btn:nth-child(4)")).click();
    // 6 | click | css=#accordion-filter_collapse-1 .style-check:nth-child(2) span:nth-child(1) | 
    driver.findElement(By.cssSelector("#accordion-filter_collapse-1 .style-check:nth-child(2) span:nth-child(1)")).click();
    // 7 | storeText | css=.table-cell:nth-child(6) > span | numberOfItemsAfterOneFilter
    vars.put("numberOfItemsAfterOneFilter", driver.findElement(By.cssSelector(".table-cell:nth-child(6) > span")).getText());
    // 8 | click | css=#accordion-filter_heading-5 > .panel-title | 
    driver.findElement(By.cssSelector("#accordion-filter_heading-5 > .panel-title")).click();
    // 9 | click | css=#accordion-filter_collapse-5 .style-check:nth-child(2) span:nth-child(1) | 
    driver.findElement(By.cssSelector("#accordion-filter_collapse-5 .style-check:nth-child(2) span:nth-child(1)")).click();
    // 10 | assertNotText | css=.table-cell:nth-child(6) > span | numberOfItemsAfterOneFilter
    assertThat(driver.findElement(By.cssSelector(".table-cell:nth-child(6) > span")).getText(), is(not("numberOfItemsAfterOneFilter")));
  }
  @Test
  public void testOneFilter() {
    // Test name: TestOneFilter
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://www.costco.com/");
    // 2 | setWindowSize | 1735x750 | 
    driver.manage().window().setSize(new Dimension(1735, 750));
    // 3 | click | id=search-field | 
    driver.findElement(By.id("search-field")).click();
    // 4 | type | id=search-field | sofa
    driver.findElement(By.id("search-field")).sendKeys("sofa");
    // 5 | click | css=.btn:nth-child(4) > .co-search-thin | 
    driver.findElement(By.cssSelector(".btn:nth-child(4) > .co-search-thin")).click();
    // 6 | storeText | css=.table-cell:nth-child(6) > span | numberOfItems
    vars.put("numberOfItems", driver.findElement(By.cssSelector(".table-cell:nth-child(6) > span")).getText());
    // 7 | click | css=#accordion-filter_collapse-1 .style-check:nth-child(1) span:nth-child(1) | 
    driver.findElement(By.cssSelector("#accordion-filter_collapse-1 .style-check:nth-child(1) span:nth-child(1)")).click();
    // 8 | assertNotText | css=.table-cell:nth-child(6) > span | numberOfItems
    assertThat(driver.findElement(By.cssSelector(".table-cell:nth-child(6) > span")).getText(), is(not("numberOfItems")));
  }
}
